@model RapidWeb.ViewModel.NormalInvoiceViewModel
@{
    ViewBag.Title = "Normal Invoice Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-xl-12 order-xl-1">
    <div id="SectionChartDiv" class="card bg-secondary shadow">
        <div class="card-header bg-white border-0">
            <div class="row align-items-center">
                <div class="col-8">
                    <h3 class="mb-0">@ViewBag.Title</h3>
                </div>
                <div class="col-4 text-right">
                    <a class="float-right btn btn-primary btn-sm" href="@Url.Action("Index")">Back To List</a>
                </div>
            </div>
        </div>

        <div class="card-body">

            <div class="row">
                <div class="col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(U => U.NormalInvoice.Date, new { @class = "form-control-label" })
                        @Html.TextBoxFor(U => U.NormalInvoice.Date, new { @class = "form-control form-control-alternative datepicker" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(U => U.NormalInvoice.ComplainId, new { @class = "form-control-label" })
                        @Html.DropDownListFor(U => U.NormalInvoice.ComplainId, new SelectList(Model.Complains, "Id", "PrefixId"), "Select Complain ID", new { @type = "date", @class = "form-control form-control-alternative" })
                    </div>
                </div>

                <div class="col-sm-6 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(U => U.NormalInvoice.PurchaseOrderId, new { @class = "form-control-label" })
                        @Html.DropDownListFor(U => U.NormalInvoice.PurchaseOrderId, new SelectList(Model.PurchaseOrders, "Id", "PrefixId"), "Select Purchase Order ID", new { @type = "date", @class = "form-control form-control-alternative" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(U => U.NormalInvoice.CustomerName, new { @class = "form-control-label" })
                        @Html.TextBoxFor(U => U.NormalInvoice.CustomerName, new { @class = "form-control form-control-alternative" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(U => U.NormalInvoice.CustomerAddress, new { @class = "form-control-label" })
                        @Html.TextBoxFor(U => U.NormalInvoice.CustomerAddress, new { @class = "form-control form-control-alternative" })
                    </div>
                </div>
                <div class="col-sm-6 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(U => U.NormalInvoice.CoAddress, new { @class = "form-control-label" })
                        @Html.TextBoxFor(U => U.NormalInvoice.CoAddress, new { @class = "form-control form-control-alternative" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(U => U.NormalInvoice.WorkNature, new { @class = "form-control-label" })
                        @Html.TextBoxFor(U => U.NormalInvoice.WorkNature, new { @class = "form-control form-control-alternative" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(U => U.NormalInvoice.TotalAmount, new { @class = "form-control-label" })
                        @Html.TextBoxFor(U => U.NormalInvoice.TotalAmount, new { @disabled = true, @class = "form-control form-control-alternative" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(U => U.NormalInvoice.InWords, new { @class = "form-control-label" })
                        @Html.TextBoxFor(U => U.NormalInvoice.InWords, new { @class = "form-control form-control-alternative" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="table-responsive">
                    <table id="DynamicTable" class="table align-items-center table-flush">
                        <thead class="thead-light">
                            <tr>
                                <th scope="col">Product</th>
                                <th scope="col">Quantity</th>
                                <th scope="col">Cost</th>
                                <th scope="col">Total Cost</th>
                                <th scope="col">Remove</th>
                            </tr>
                        </thead>
                        <tbody>
                            @*<tr>
                                    <td class="SequenceNo">
                                        <select class="form-control form-control-alternative" data-val="true" data-val-number="The field RoleId must be a number." data-val-required="The RoleId field is required." id="User_RoleId" name="User.RoleId"></select>
                                    </td>
                                    <td class="CourseId">
                                        <input type="text" id="Section-Name" class="form-control form-control-alternative">
                                    </td>
                                    <td class="CourseTitle">
                                        <input type="text" id="Section-Name" class="form-control form-control-alternative">
                                    </td>
                                    <td align="center">
                                        <button class="DeleteRow btn btn-danger btn-sm" type="button">
                                            <span aria-hidden="true">
                                                X
                                            </span>
                                        </button>
                                    </td>
                                </tr>*@
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="5">
                                    <button id="AddNewRow" class="  btn btn-primary btn-sm btn-block" style="" type="button">
                                        Add
                                    </button>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>

            <div align='center'>
                <div class="col-lg-12">
                    <div id="AlertMessageMain" class="alert alert-success alert-dismissible fade show" style="display: none" role="alert">
                        <span id="AlertMessage"></span>
                        <button id="AlertMessageClose" type="button" class="close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="SubmitBtn" type="submit" role="button" value="Generate Invoice" class="btn btn-success">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jquery");

    <script type="text/javascript">
        $(document).ready(function() {
            var productsList = [];
            LoadProducts();

            function LoadProducts() {
                $.ajax({
                    url: "/Product/GetProductAllProducts",
                    type: "GET",
                    success: function(data) {
                        productsList = data;
                    },
                    error: function() {
                    }
                });
            }

            $("#SubmitBtn").click(function() {
                var Products = [];

                $('#DynamicTable tbody tr').each(function() {
                    var prod = {};

                    prod.ProductId = $(this).find('td select').val();
                    prod.RequiredQty = $(this).find('td .ProductQty').val();
                    prod.UnitPrice = $(this).find('td .ProductCost').val();

                    Products.push(prod);
                });

                var purchaseRequest = {
                    PurchaseRequestId: $("#PurchaseOrder_PurchaseRequestId").val(),
                    Date: $("#NormalInvoice_Date").val(),
                    ComplainId: $("#NormalInvoice_ComplainId").val(),
                    PurchaseOrderId: $("#NormalInvoice_PurchaseOrderId").val(),
                    CustomerName: $("#NormalInvoice_CustomerName").val(),
                    CustomerAddress: $("#NormalInvoice_CustomerAddress").val(),
                    PSTRNo: $("#NormalInvoice_PSTRNo").val(),
                    NTNNo: $("#NormalInvoice_NTNNo").val(),
                    CoAddress: $("#NormalInvoice_CoAddress").val(),
                    CoPSTRNo: $("#NormalInvoice_CoPSTRNo").val(),
                    CoNTNNo: $("#NormalInvoice_CoNTNNo").val(),
                    WorkNature: $("#NormalInvoice_WorkNature").val(),
                    InWords: $("#NormalInvoice_InWords").val(),
                    TotalExcludingSaleTex: $("#NormalInvoice_TotalExcludingSaleTex").val(),
                    SaleTexAmountPayable: $("#NormalInvoice_SaleTexAmountPayable").val(),
                    TotalAmount: $("#NormalInvoice_TotalAmount").val(),

                    NormalInvoiceProducts: Products,
                };

                $("#AlertMessage").text("Loading.");
                $("#AlertMessageMain").addClass("alert-warning");
                $("#AlertMessageMain").removeClass("alert-danger alert-success");
                $("#AlertMessageMain").css("display", "block");

                $.ajax({
                    url: "/NormalInvoice/NormalInvoiceForm/",
                    type: "POST",
                    data: JSON.stringify(purchaseRequest),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (STId) {
                        $("#AlertMessage").text("Success.");
                        $("#AlertMessageMain").addClass("alert-success");
                        $("#AlertMessageMain").removeClass("alert-danger alert-warning");

                        var href = "/NormalInvoice/NormalInvoiceDetail/" + STId;
                        window.location.href = href;
                    },
                    error: function (request,error) {

                        $("#AlertMessage").text("Failed. You have filled an invalid data.");
                        $("#AlertMessageMain").addClass("alert-danger");
                        $("#AlertMessageMain").removeClass("alert-success alert-warning");
                    }
                });
            });

            $("#AlertMessageClose").click(function() {
                $("#AlertMessageMain").css("display", "none");
            });

            $("#DynamicTable").on("keyup", ".ProductQty, .ProductCost", function () {
                var changedTr = $(this).parent().parent();
                calculateTrTotal(changedTr);
            });

            $("#NormalInvoice_SaleTexAmountPayable").keyup(function() {
                calculateTableAmount();
            });

            function calculateTrTotal(changedTr) {
                var trQty = changedTr.find(".ProductQty")[0].value;
                var trCost = changedTr.find(".ProductCost")[0].value;
                changedTr.find(".ProductTotalCost")[0].value = parseInt(trQty) * parseFloat(trCost);

                calculateTableCostExcludeTex();
            }

            function calculateTableCostExcludeTex() {
                var total = .0;
                $('#DynamicTable tbody tr').each(function () {
                    total += parseFloat($(this).find('td .ProductTotalCost').val());
                });

                $("#NormalInvoice_TotalAmount").val(total);
            }

            $("#DynamicTable").on("change", ".productDropDown", function () {
                var productDrop = $(this);
                var productId = productDrop.val();
                var product = productsList.filter(x => { return x.Id == productId })[0];
                var productCost = product.Cost;
                var tr = productDrop.parent().parent();
                var costInput = tr.find(".ProductCost")[0];
                costInput.value = productCost;
                calculateTrTotal(tr);
            });

            $("#AddNewRow").click(function() {
                var options = "<option value>Select Product</option>";

                $.each(productsList,
                    function(index, item) {
                        options += "<option value=" + item.Id + ">" + item.Description + "</option>";
                    });

                var tbody = $("#DynamicTable tbody");
                var tr = "<tr>" +
                    "<td class=''>" +
                    "<select class='productDropDown form-control form-control-alternative'>" +
                    options +
                    "</select>" +
                    "</td>" +
                    "<td class=''>" +
                    "<input type='text' class='ProductQty form-control form-control-alternative'>" +
                    "</td>" +
                    "<td class=''>" +
                    "<input type='text' class='ProductCost form-control form-control-alternative'>" +
                    "</td>" +
                    "<td class=''>" +
                    "<input type='text' class='ProductTotalCost form-control form-control-alternative' value='0' disabled>" +
                    "</td>" +
                    "<td align='center'>" +
                    "<button class='DeleteRow btn btn-danger btn-sm' type='button'>" +
                    "<span aria-hidden='true'>" +
                    "X" +
                    "</span>" +
                    "</button>" +
                    "</td>" +
                    "</tr>";
                tbody.append(tr);
            });

            $("#DynamicTable").on("click", ".DeleteRow", function() {
                    $(this).parent().parent().remove();
                    calculateTableCostExcludeTex();
            });
        });
    </script>
}